@using PdfGenerator.Models.Resx
@model PdfGenerator.Models.StudentLCData

@{
    ViewBag.Title = SchoolLC.Create;
    Layout = null;
}
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />

<script type="text/javascript">
    $(function () {
        $("input:text.date").datepicker({ dateFormat: "dd/MM/yyyy" });
    });
</script>
<div style="padding:50px;">
    <h3>@PdfGenerator.Models.Resx.SchoolLC.AddNewRecordHere</h3>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @*<div class="form">*@

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-3 mb-3">
                @Html.LabelFor(model => model.AdmissionNo, htmlAttributes: new { @class = "control-label " })


                @Html.EditorFor(model => model.AdmissionNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdmissionNo, "", new { @class = "text-danger" })

            </div>

            <div class="form-group  col-md-3">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })

            </div>
            <div class="form-group col-md-3">
               

                @*@Html.DropDownList("Nationality", new SelectList(ViewBag.CountryList), new { @class = "form-control" })*@
                @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-3 mb-3">
                @Html.LabelFor(model => model.MotherTongue, htmlAttributes: new { @class = "control-label " })

                @Html.EditorFor(model => model.MotherTongue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MotherTongue, "", new { @class = "text-danger" })

            </div>
        </div>






        <div class="row">
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = "control-label " })

                @Html.DropDownList("Religion", new List<SelectListItem> {
              new SelectListItem { Text= "Hindu",Value= "Hindu" },
          new SelectListItem { Text= "Muslim",Value= "Muslim" },
          new SelectListItem { Text= "Christian",Value= "Christian" },
          new SelectListItem { Text= "Sikh",Value= "Sikh" },
          new SelectListItem { Text= "Buddhist",Value= "Buddhist" },
          new SelectListItem { Text= "Jain",Value= "Jain" }}, "Select Religion", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.Caste, htmlAttributes: new { @class = "control-label " })

                @Html.DropDownList("Caste", new List<SelectListItem> {
              new SelectListItem { Text= "SC",Value= "SC" },
          new SelectListItem { Text= "ST",Value= "ST" },
          new SelectListItem { Text= "OBC",Value= "OBC" },
          new SelectListItem { Text= "SBC",Value= "SBC" },
          new SelectListItem { Text= "VJ",Value= "VJ" },
          new SelectListItem { Text= "NT-B",Value= "NT-B" },
          new SelectListItem { Text = "NT-C", Value = "NT-C" },
                new SelectListItem { Text = "NT-D", Value = "NT-D" }}, "Select Caste", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Caste, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.SubCaste, htmlAttributes: new { @class = "control-label " })

                @Html.EditorFor(model => model.SubCaste, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubCaste, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-3">
               @Html.LabelFor(model => model.BirthPlace, htmlAttributes: new { @class = "control-label " })

                @Html.EditorFor(model => model.BirthPlace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthPlace, "", new { @class = "text-danger" })

            </div>
        </div>


        <div class="row">
            <div class="form-group col-md-6 ">
               @Html.LabelFor(model => model.DOBInDigits, htmlAttributes: new { @class = "control-label " })

                @Html.EditorFor(model => model.DOBInDigits, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOBInDigits, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-6">
               @Html.LabelFor(model => model.DOBInWords, htmlAttributes: new { @class = "control-label " })

                @Html.EditorFor(model => model.DOBInWords, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOBInWords, "", new { @class = "text-danger" })


            </div>

        </div>


            <div class="row">
                <div class="col-md-12">
                   @Html.LabelFor(model => model.PrevSchlName, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.PrevSchlName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PrevSchlName, "", new { @class = "text-danger" })

                </div>

            </div>


            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.AdmittedInClass, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.AdmittedInClass, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AdmittedInClass, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-6">
                   @Html.LabelFor(model => model.AdmissionDate, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.AdmissionDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AdmissionDate, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Progress, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.Progress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Progress, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ConductBehaviour, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.ConductBehaviour, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConductBehaviour, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                 @Html.LabelFor(model => model.DateOfSchlLeaving, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.DateOfSchlLeaving, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateOfSchlLeaving, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-6">
                   @Html.LabelFor(model => model.ClassFromLeft, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.ClassFromLeft, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClassFromLeft, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.ReasonForLeaving, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.ReasonForLeaving, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReasonForLeaving, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.CertificateRcvdDate, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.CertificateRcvdDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CertificateRcvdDate, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-6">
                  @Html.LabelFor(model => model.ReceivedByName, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.ReceivedByName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReceivedByName, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-12">
                    <div class="">
                        <input type="submit" value="@PdfGenerator.Models.Resx.SchoolLC.Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
            @*</div>*@
    }
    <br />

    <div>
        @Html.ActionLink(@PdfGenerator.Models.Resx.SchoolLC.BackToList, "Index")
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
